CREATE TABLE User(
	PK_USERID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	USERNAME VARCHAR(25) NOT NULL,
	CONFIRMED TINYINT(1) NOT NULL,
	FIRSTNAME VARCHAR(25) NOT NULL,
	LASTNAME VARCHAR(25) NOT NULL,
	EMAIL VARCHAR(50) NOT NULL,
	SPECIALTY VARCHAR(25) NOT NULL,
	TRAININGYR INTEGER NOT NULL,
	CREATED DATETIME NOT NULL,
	MODIFIED DATETIME NOT NULL
);

INSERT INTO User VALUES (1, 'admin', 1, 'super', 'user', 'ryanmcgivern@gmail.com', 'Computer Engineering', 5, NOW(), NOW());

CREATE TABLE Image(
	PK_IMAGEID INTEGER NOT NULL PRIMARY KEY,
	URL VARCHAR(250) NOT NULL,
	CREATED DATETIME NOT NULL,
	MODIFIED DATETIME NOT NULL
);

INSERT INTO Image VALUES (1, 'http://farm2.static.flickr.com/1199/706701237_e7458ec575.jpg', NOW(), NOW());

CREATE TABLE Card(
	CARDID INTEGER NOT NULL,
	VERSION INTEGER NOT NULL,
	FK_USERID INTEGER NOT NULL,
	QTEXT VARCHAR(250) NOT NULL,
	ATEXT VARCHAR(250) NOT NULL,
	FK_IMAGEID INTEGER,
	STAR_RATING SMALLINT NOT NULL,
	CREATED DATETIME NOT NULL,
	PRIMARY KEY (CARDID, VERSION),
	FOREIGN KEY (FK_USERID) REFERENCES User (PK_USERID),
	FOREIGN KEY (FK_IMAGEID) REFERENCES Image (PK_IMAGEID)
);

INSERT INTO Card VALUES (1, 1, 1, 'Admin Test Question', 'Admin Test Answer', 1, 3, NOW());

CREATE TABLE Stack(
	PK_STACKID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(25),
	FK_USERID INTEGER NOT NULL,
	COUNT INTEGER NOT NULL,
	FK_DIFFICULTYID INTEGER,
	CREATED DATETIME NOT NULL,
	MODIFIED DATETIME NOT NULL,
	FOREIGN KEY (FK_USERID) REFERENCES User (PK_USERID)
);

INSERT INTO Stack VALUES (1, 'Test Stack', 1, 1, NULL, NOW(), NOW());

CREATE TABLE Comment(
	PK_COMMENTID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	FK_CARDID INTEGER NOT NULL,
	FK_USERID INTEGER NOT NULL,
	COMMENT_TEXT VARCHAR(250) NOT NULL,
	CARD_VERSION INTEGER NOT NULL,
	CREATED DATETIME NOT NULL,
	MODIFIED DATETIME NOT NULL,
	FOREIGN KEY (FK_CARDID) REFERENCES Card (CARDID),
	FOREIGN KEY (FK_USERID) REFERENCES User (PK_USERID)
);

INSERT INTO Comment VALUES (1, 1, 1, 'Admin Test Comment', 1, NOW(), NOW());

CREATE TABLE Tag(
	PK_TAGID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	TAG_TEXT VARCHAR(50) NOT NULL,
	MESH_PARENT INTEGER,
	APPROVED TINYINT(1) NOT NULL,
	CREATED DATETIME NOT NULL,
	MODIFIED DATETIME NOT NULL
);

INSERT INTO Tag VALUES (1, 'Myocardial Infarction', NULL, 1, NOW(), NOW());

CREATE TABLE Context(
	PK_CONTEXTID INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
	FK_USERID INTEGER NOT NULL,
	SEARCHSTACKS VARCHAR(50),
	CUSTOMSTACKS VARCHAR(50),
	NUMREVIEWCARDS INTEGER NOT NULL,
	MODIFIED DATETIME NOT NULL,
	FOREIGN KEY (FK_USERID) REFERENCES User (PK_USERID)
);

INSERT INTO Context VALUES (1, 1, NULL, 1, 5, NOW());

CREATE TABLE Stacks_Cards(
	STACK_ID INTEGER NOT NULL,
	CARD_ID INTEGER NOT NULL,
	PRIMARY KEY (STACK_ID, CARD_ID),
	FOREIGN KEY (STACK_ID) REFERENCES Stack (PK_STACKID),
	FOREIGN KEY (CARD_ID) REFERENCES Card (CARDID)
);

INSERT INTO Stacks_Cards VALUES (1, 1);

CREATE TABLE Cards_Tags( CARD_ID INTEGER NOT NULL, TAG_ID INTEGER NOT NULL, PRIMARY KEY (CARD_ID, TAG_ID), FOREIGN KEY (TAG_ID) REFERENCES Tag (PK_TAGID), FOREIGN KEY (CARD_ID) REFERENCES Card (CARDID));

INSERT INTO Cards_Tags VALUES (1, 1);

select * from Card;
select * from Cards_Tags;
select * from Comment;
select * from Context;
select * from Image;
select * from Stack;
select * from Stacks_Cards;
select * from Tag;
select * from User;